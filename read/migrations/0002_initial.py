# Generated by Django 5.0 on 2023-12-08 16:12

import auto_prefetch
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("entity", "0001_initial"),
        ("read", "0001_initial"),
        ("write", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="readcheckin",
            name="tags",
            field=models.ManyToManyField(blank=True, to="write.tag"),
        ),
        migrations.AddField(
            model_name="readcheckin",
            name="user",
            field=auto_prefetch.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="work",
            name="created_by",
            field=auto_prefetch.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="works_created",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="work",
            name="genres",
            field=models.ManyToManyField(
                blank=True, related_name="read_works", to="read.genre"
            ),
        ),
        migrations.AddField(
            model_name="work",
            name="updated_by",
            field=auto_prefetch.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="works_updated",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="instance",
            name="work",
            field=auto_prefetch.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="instances",
                to="read.work",
            ),
        ),
        migrations.AddField(
            model_name="historicalworkrole",
            name="work",
            field=auto_prefetch.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="read.work",
            ),
        ),
        migrations.AddField(
            model_name="historicalinstance",
            name="work",
            field=auto_prefetch.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="read.work",
            ),
        ),
        migrations.AddField(
            model_name="workrole",
            name="creator",
            field=auto_prefetch.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="read_workrole_set",
                to="entity.creator",
            ),
        ),
        migrations.AddField(
            model_name="workrole",
            name="role",
            field=auto_prefetch.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="read_workrole_set",
                to="entity.role",
            ),
        ),
        migrations.AddField(
            model_name="workrole",
            name="work",
            field=auto_prefetch.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="read.work"
            ),
        ),
        migrations.AddField(
            model_name="work",
            name="creators",
            field=models.ManyToManyField(
                related_name="read_works", through="read.WorkRole", to="entity.creator"
            ),
        ),
    ]
