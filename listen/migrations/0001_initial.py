# Generated by Django 5.0 on 2023-12-08 16:12

import auto_prefetch
import django.db.models.deletion
import django.db.models.manager
import entity.models
import listen.models
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("entity", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AudiobookRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("alt_name", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("slug", models.SlugField(blank=True, max_length=255, unique=True)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="HistoricalAudiobook",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("locked", models.BooleanField(default=False)),
                ("title", models.CharField(max_length=255)),
                ("subtitle", models.CharField(blank=True, max_length=255, null=True)),
                ("cover", models.TextField(blank=True, max_length=100, null=True)),
                (
                    "cover_sens",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "language",
                    entity.models.LanguageField(
                        blank=True,
                        choices=[
                            ("de", "Deutsch (de)"),
                            ("en", "English (en)"),
                            ("es", "español (es)"),
                            ("fr", "français (fr)"),
                            ("ru", "русский (ru)"),
                            ("ja", "日本語 (ja)"),
                            ("zh-Hans", "简体中文 (zh-Hans)"),
                            ("zh-Hant", "繁體中文 (zh-Hant)"),
                            ("ab", "Abkhazian (ab)"),
                            ("aa", "Afar (aa)"),
                            ("af", "Afrikaans (af)"),
                            ("ak", "Akan (ak)"),
                            ("tw", "Akan (tw)"),
                            ("an", "Aragonese (an)"),
                            ("av", "Avaric (av)"),
                            ("ae", "Avestan (ae)"),
                            ("ay", "Aymara (ay)"),
                            ("su", "Basa Sunda (su)"),
                            ("ba", "Bashkir (ba)"),
                            ("bi", "Bislama (bi)"),
                            ("ch", "Chamorro (ch)"),
                            ("cu", "Church Slavic (cu)"),
                            ("cv", "Chuvash (cv)"),
                            ("co", "Corsican (co)"),
                            ("cr", "Cree (cr)"),
                            ("cy", "Cymraeg (cy)"),
                            ("nv", "Diné bizaad (nv)"),
                            ("dv", "Divehi (dv)"),
                            ("ee", "Eʋegbe (ee)"),
                            ("fj", "Fijian (fj)"),
                            ("fy", "Frysk (fy)"),
                            ("ga", "Gaeilge (ga)"),
                            ("gv", "Gaelg (gv)"),
                            ("ki", "Gikuyu (ki)"),
                            ("gn", "Guarani (gn)"),
                            ("gd", "Gàidhlig (gd)"),
                            ("ht", "Haitian Creole (ht)"),
                            ("ha", "Hausa (ha)"),
                            ("hz", "Herero (hz)"),
                            ("ho", "Hiri Motu (ho)"),
                            ("io", "Ido (io)"),
                            ("ig", "Igbo (ig)"),
                            ("rn", "Ikirundi (rn)"),
                            ("ie", "Interlingue (ie)"),
                            ("iu", "Inuktitut (iu)"),
                            ("ik", "Inupiaq (ik)"),
                            ("jv", "Jawa (jv)"),
                            ("kr", "Kanuri (kr)"),
                            ("rw", "Kinyarwanda (rw)"),
                            ("sw", "Kiswahili (sw)"),
                            ("kv", "Komi (kv)"),
                            ("kg", "Kongo (kg)"),
                            ("kj", "Kuanyama (kj)"),
                            ("li", "Limburgish (li)"),
                            ("la", "Lingua latina (la)"),
                            ("lg", "Luganda (lg)"),
                            ("lb", "Lëtzebuergesch (lb)"),
                            ("mg", "Malagasy (mg)"),
                            ("mt", "Malti (mt)"),
                            ("mh", "Marshallese (mh)"),
                            ("na", "Nauru (na)"),
                            ("ng", "Ndonga (ng)"),
                            ("nl", "Nederlands (nl)"),
                            ("ny", "Nyanja (ny)"),
                            ("oc", "Occitan (oc)"),
                            ("oj", "Ojibwa (oj)"),
                            ("om", "Oromoo (om)"),
                            ("pi", "Pali (pi)"),
                            ("ff", "Pulaar (ff)"),
                            ("qu", "Runasimi (qu)"),
                            ("sm", "Samoan (sm)"),
                            ("so", "Soomaali (so)"),
                            ("nr", "South Ndebele (nr)"),
                            ("st", "Southern Sotho (st)"),
                            ("ss", "Swati (ss)"),
                            ("sg", "Sängö (sg)"),
                            ("tl", "Tagalog (tl)"),
                            ("ty", "Tahitian (ty)"),
                            ("vi", "Tiếng Việt (vi)"),
                            ("lu", "Tshiluba (lu)"),
                            ("ts", "Tsonga (ts)"),
                            ("tn", "Tswana (tn)"),
                            ("tr", "Türkçe (tr)"),
                            ("vo", "Volapük (vo)"),
                            ("wa", "Walloon (wa)"),
                            ("wo", "Wolof (wo)"),
                            ("za", "Zhuang (za)"),
                            ("az", "azərbaycan (az)"),
                            ("id", "bahasa Indonesia (id)"),
                            ("ms", "bahasa Malaysia (ms)"),
                            ("bm", "bamanakan (bm)"),
                            ("bs", "bosanski (bs)"),
                            ("br", "brezhoneg (br)"),
                            ("ca", "català (ca)"),
                            ("sn", "chiShona (sn)"),
                            ("da", "dansk (da)"),
                            ("se", "davvisámegiella (se)"),
                            ("et", "eesti (et)"),
                            ("eo", "esperanto (eo)"),
                            ("eu", "euskara (eu)"),
                            ("fo", "føroyskt (fo)"),
                            ("gl", "galego (gl)"),
                            ("hr", "hrvatski (hr)"),
                            ("ia", "interlingua (ia)"),
                            ("nd", "isiNdebele (nd)"),
                            ("xh", "isiXhosa (xh)"),
                            ("zu", "isiZulu (zu)"),
                            ("it", "italiano (it)"),
                            ("kl", "kalaallisut (kl)"),
                            ("kw", "kernewek (kw)"),
                            ("ku", "kurdî (ku)"),
                            ("lv", "latviešu (lv)"),
                            ("to", "lea fakatonga (to)"),
                            ("lt", "lietuvių (lt)"),
                            ("ln", "lingála (ln)"),
                            ("hu", "magyar (hu)"),
                            ("no", "norsk (no)"),
                            ("nb", "norsk bokmål (nb)"),
                            ("nn", "norsk nynorsk (nn)"),
                            ("uz", "o‘zbek (uz)"),
                            ("pl", "polski (pl)"),
                            ("pt", "português (pt)"),
                            ("ro", "română (ro)"),
                            ("rm", "rumantsch (rm)"),
                            ("sc", "sardu (sc)"),
                            ("sq", "shqip (sq)"),
                            ("sk", "slovenčina (sk)"),
                            ("sl", "slovenščina (sl)"),
                            ("sh", "srpskohrvatski (sh)"),
                            ("fi", "suomi (fi)"),
                            ("sv", "svenska (sv)"),
                            ("mi", "te reo Māori (mi)"),
                            ("ve", "tshiVenḓa (ve)"),
                            ("tk", "türkmen dili (tk)"),
                            ("yo", "Èdè Yorùbá (yo)"),
                            ("is", "íslenska (is)"),
                            ("cs", "čeština (cs)"),
                            ("el", "Ελληνικά (el)"),
                            ("be", "беларуская (be)"),
                            ("bg", "български (bg)"),
                            ("os", "ирон (os)"),
                            ("ky", "кыргызча (ky)"),
                            ("mk", "македонски (mk)"),
                            ("mn", "монгол (mn)"),
                            ("ce", "нохчийн (ce)"),
                            ("sr", "српски (sr)"),
                            ("tt", "татар (tt)"),
                            ("tg", "тоҷикӣ (tg)"),
                            ("uk", "українська (uk)"),
                            ("kk", "қазақ тілі (kk)"),
                            ("hy", "հայերեն (hy)"),
                            ("yi", "ייִדיש (yi)"),
                            ("he", "עברית (he)"),
                            ("ug", "ئۇيغۇرچە (ug)"),
                            ("ur", "اردو (ur)"),
                            ("ar", "العربية (ar)"),
                            ("sd", "سنڌي (sd)"),
                            ("fa", "فارسی (fa)"),
                            ("ps", "پښتو (ps)"),
                            ("ks", "کٲشُر (ks)"),
                            ("ne", "नेपाली (ne)"),
                            ("mr", "मराठी (mr)"),
                            ("sa", "संस्कृत भाषा (sa)"),
                            ("hi", "हिन्दी (hi)"),
                            ("as", "অসমীয়া (as)"),
                            ("bn", "বাংলা (bn)"),
                            ("pa", "ਪੰਜਾਬੀ (pa)"),
                            ("gu", "ગુજરાતી (gu)"),
                            ("or", "ଓଡ଼ିଆ (or)"),
                            ("ta", "தமிழ் (ta)"),
                            ("te", "తెలుగు (te)"),
                            ("kn", "ಕನ್ನಡ (kn)"),
                            ("ml", "മലയാളം (ml)"),
                            ("si", "සිංහල (si)"),
                            ("th", "ไทย (th)"),
                            ("lo", "ລາວ (lo)"),
                            ("bo", "བོད་སྐད་ (bo)"),
                            ("dz", "རྫོང་ཁ (dz)"),
                            ("my", "မြန်မာ (my)"),
                            ("ka", "ქართული (ka)"),
                            ("ti", "ትግርኛ (ti)"),
                            ("am", "አማርኛ (am)"),
                            ("km", "ខ្មែរ (km)"),
                            ("zh", "中文 (zh)"),
                            ("ii", "ꆈꌠꉙ (ii)"),
                            ("ko", "한국어 (ko)"),
                        ],
                        default=None,
                        max_length=8,
                        null=True,
                    ),
                ),
                ("release_date", models.TextField(blank=True, null=True)),
                ("wikipedia", models.URLField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("format", models.CharField(blank=True, max_length=255, null=True)),
                ("length", models.CharField(blank=True, max_length=255, null=True)),
                ("internet_archive_url", models.URLField(blank=True, null=True)),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical audiobook",
                "verbose_name_plural": "historical audiobooks",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalAudiobookRole",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("alt_name", models.CharField(blank=True, max_length=255, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical audiobook role",
                "verbose_name_plural": "historical audiobook roles",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalRelease",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("locked", models.BooleanField(default=False)),
                ("cover", models.TextField(blank=True, max_length=100, null=True)),
                (
                    "cover_sens",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("title", models.CharField(max_length=255)),
                ("subtitle", models.CharField(blank=True, max_length=255, null=True)),
                ("other_titles", models.TextField(blank=True, null=True)),
                ("discogs", models.URLField(blank=True, null=True)),
                ("wikipedia", models.URLField(blank=True, null=True)),
                (
                    "catalog_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "release_date",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "release_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("LP", "LP"),
                            ("EP", "EP"),
                            ("Single", "Single"),
                            ("Box Set", "Box Set"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "recording_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Studio", "Studio"),
                            ("Live", "Live"),
                            ("Studio and Live", "Studio and Live"),
                            ("Compilation", "Compilation"),
                            ("Bootleg", "Bootleg"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "release_format",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "release_region",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "release_length",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("spotify_url", models.URLField(blank=True, null=True)),
                ("apple_music_url", models.URLField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical release",
                "verbose_name_plural": "historical releases",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalReleaseGroup",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("locked", models.BooleanField(default=False)),
                ("title", models.CharField(max_length=100)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical release group",
                "verbose_name_plural": "historical release groups",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalReleaseRole",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("alt_name", models.CharField(blank=True, max_length=255, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical release role",
                "verbose_name_plural": "historical release roles",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalReleaseTrack",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("alt_title", models.CharField(blank=True, max_length=255, null=True)),
                ("disk", models.CharField(default="1", max_length=10)),
                (
                    "order",
                    models.PositiveIntegerField(blank=True, default=1, null=True),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical release track",
                "verbose_name_plural": "historical release tracks",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalTrack",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("locked", models.BooleanField(default=False)),
                ("title", models.CharField(max_length=255)),
                ("subtitle", models.CharField(blank=True, max_length=255, null=True)),
                ("other_titles", models.TextField(blank=True, null=True)),
                (
                    "release_date",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "recorded_date",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("length", models.CharField(blank=True, max_length=10, null=True)),
                ("isrc", models.CharField(blank=True, max_length=255, null=True)),
                ("wikipedia", models.URLField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical track",
                "verbose_name_plural": "historical tracks",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalWork",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("locked", models.BooleanField(default=False)),
                ("title", models.CharField(max_length=200)),
                ("subtitle", models.CharField(blank=True, max_length=200, null=True)),
                ("other_titles", models.TextField(blank=True, null=True)),
                (
                    "release_date",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "recorded_date",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("wikipedia", models.URLField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical work",
                "verbose_name_plural": "historical works",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalWorkRole",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("alt_name", models.CharField(blank=True, max_length=255, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical work role",
                "verbose_name_plural": "historical work roles",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="ListenCheckIn",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField(null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("to_listen", "To Listen"),
                            ("looping", "Looping"),
                            ("listened", "Listened"),
                            ("listening", "Listening"),
                            ("paused", "Paused"),
                            ("abandoned", "Abandoned"),
                            ("subscribed", "Subscribed"),
                            ("unsubscribed", "Unsubscribed"),
                            ("sampled", "Sampled"),
                            ("relistened", "Relistened"),
                            ("relistening", "Relistening"),
                            ("bought", "Bought"),
                        ],
                        max_length=255,
                    ),
                ),
                ("share_to_feed", models.BooleanField(default=False)),
                ("content", models.TextField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("progress", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "progress_type",
                    models.CharField(
                        choices=[
                            ("TT", "Accumulated Listen Time"),
                            ("LT", "Loop Time"),
                            ("EP", "Episode"),
                        ],
                        default="LT",
                        max_length=2,
                    ),
                ),
                ("comments_enabled", models.BooleanField(default=True)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Podcast",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("locked", models.BooleanField(default=False)),
                ("title", models.CharField(max_length=255)),
                ("subtitle", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "cover",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=listen.models.rename_release_cover,
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("publisher", models.CharField(blank=True, max_length=255, null=True)),
                ("rss_feed_url", models.URLField(unique=True)),
                ("website_url", models.URLField(blank=True, null=True)),
                ("episodes", models.JSONField(blank=True, null=True)),
                ("language", models.CharField(blank=True, max_length=20, null=True)),
                ("copyright", models.CharField(blank=True, max_length=255, null=True)),
                ("last_updated", models.DateTimeField(blank=True, null=True)),
                ("categories", models.JSONField(blank=True, null=True)),
                ("explicit", models.BooleanField(blank=True, default=False, null=True)),
                ("author", models.CharField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Release",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("locked", models.BooleanField(default=False)),
                (
                    "cover",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=listen.models.rename_release_cover,
                    ),
                ),
                (
                    "cover_sens",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("title", models.CharField(max_length=255)),
                ("subtitle", models.CharField(blank=True, max_length=255, null=True)),
                ("other_titles", models.TextField(blank=True, null=True)),
                ("discogs", models.URLField(blank=True, null=True)),
                ("wikipedia", models.URLField(blank=True, null=True)),
                (
                    "catalog_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "release_date",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "release_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("LP", "LP"),
                            ("EP", "EP"),
                            ("Single", "Single"),
                            ("Box Set", "Box Set"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "recording_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Studio", "Studio"),
                            ("Live", "Live"),
                            ("Studio and Live", "Studio and Live"),
                            ("Compilation", "Compilation"),
                            ("Bootleg", "Bootleg"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "release_format",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "release_region",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "release_length",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("spotify_url", models.URLField(blank=True, null=True)),
                ("apple_music_url", models.URLField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ReleaseGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("locked", models.BooleanField(default=False)),
                ("title", models.CharField(max_length=100)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ReleaseInGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "ordering": ["release__release_date"],
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ReleaseRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("alt_name", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ReleaseTrack",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("alt_title", models.CharField(blank=True, max_length=255, null=True)),
                ("disk", models.CharField(default="1", max_length=10)),
                (
                    "order",
                    models.PositiveIntegerField(blank=True, default=1, null=True),
                ),
            ],
            options={
                "ordering": ["disk", "order"],
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Track",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("locked", models.BooleanField(default=False)),
                ("title", models.CharField(max_length=255)),
                ("subtitle", models.CharField(blank=True, max_length=255, null=True)),
                ("other_titles", models.TextField(blank=True, null=True)),
                (
                    "release_date",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "recorded_date",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("length", models.CharField(blank=True, max_length=10, null=True)),
                ("isrc", models.CharField(blank=True, max_length=255, null=True)),
                ("wikipedia", models.URLField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="TrackRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("alt_name", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Work",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("locked", models.BooleanField(default=False)),
                ("title", models.CharField(max_length=200)),
                ("subtitle", models.CharField(blank=True, max_length=200, null=True)),
                ("other_titles", models.TextField(blank=True, null=True)),
                (
                    "release_date",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "recorded_date",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("wikipedia", models.URLField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="WorkRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("alt_name", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Audiobook",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("locked", models.BooleanField(default=False)),
                ("title", models.CharField(max_length=255)),
                ("subtitle", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "cover",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=listen.models.rename_release_cover,
                    ),
                ),
                (
                    "cover_sens",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "language",
                    entity.models.LanguageField(
                        blank=True,
                        choices=[
                            ("de", "Deutsch (de)"),
                            ("en", "English (en)"),
                            ("es", "español (es)"),
                            ("fr", "français (fr)"),
                            ("ru", "русский (ru)"),
                            ("ja", "日本語 (ja)"),
                            ("zh-Hans", "简体中文 (zh-Hans)"),
                            ("zh-Hant", "繁體中文 (zh-Hant)"),
                            ("ab", "Abkhazian (ab)"),
                            ("aa", "Afar (aa)"),
                            ("af", "Afrikaans (af)"),
                            ("ak", "Akan (ak)"),
                            ("tw", "Akan (tw)"),
                            ("an", "Aragonese (an)"),
                            ("av", "Avaric (av)"),
                            ("ae", "Avestan (ae)"),
                            ("ay", "Aymara (ay)"),
                            ("su", "Basa Sunda (su)"),
                            ("ba", "Bashkir (ba)"),
                            ("bi", "Bislama (bi)"),
                            ("ch", "Chamorro (ch)"),
                            ("cu", "Church Slavic (cu)"),
                            ("cv", "Chuvash (cv)"),
                            ("co", "Corsican (co)"),
                            ("cr", "Cree (cr)"),
                            ("cy", "Cymraeg (cy)"),
                            ("nv", "Diné bizaad (nv)"),
                            ("dv", "Divehi (dv)"),
                            ("ee", "Eʋegbe (ee)"),
                            ("fj", "Fijian (fj)"),
                            ("fy", "Frysk (fy)"),
                            ("ga", "Gaeilge (ga)"),
                            ("gv", "Gaelg (gv)"),
                            ("ki", "Gikuyu (ki)"),
                            ("gn", "Guarani (gn)"),
                            ("gd", "Gàidhlig (gd)"),
                            ("ht", "Haitian Creole (ht)"),
                            ("ha", "Hausa (ha)"),
                            ("hz", "Herero (hz)"),
                            ("ho", "Hiri Motu (ho)"),
                            ("io", "Ido (io)"),
                            ("ig", "Igbo (ig)"),
                            ("rn", "Ikirundi (rn)"),
                            ("ie", "Interlingue (ie)"),
                            ("iu", "Inuktitut (iu)"),
                            ("ik", "Inupiaq (ik)"),
                            ("jv", "Jawa (jv)"),
                            ("kr", "Kanuri (kr)"),
                            ("rw", "Kinyarwanda (rw)"),
                            ("sw", "Kiswahili (sw)"),
                            ("kv", "Komi (kv)"),
                            ("kg", "Kongo (kg)"),
                            ("kj", "Kuanyama (kj)"),
                            ("li", "Limburgish (li)"),
                            ("la", "Lingua latina (la)"),
                            ("lg", "Luganda (lg)"),
                            ("lb", "Lëtzebuergesch (lb)"),
                            ("mg", "Malagasy (mg)"),
                            ("mt", "Malti (mt)"),
                            ("mh", "Marshallese (mh)"),
                            ("na", "Nauru (na)"),
                            ("ng", "Ndonga (ng)"),
                            ("nl", "Nederlands (nl)"),
                            ("ny", "Nyanja (ny)"),
                            ("oc", "Occitan (oc)"),
                            ("oj", "Ojibwa (oj)"),
                            ("om", "Oromoo (om)"),
                            ("pi", "Pali (pi)"),
                            ("ff", "Pulaar (ff)"),
                            ("qu", "Runasimi (qu)"),
                            ("sm", "Samoan (sm)"),
                            ("so", "Soomaali (so)"),
                            ("nr", "South Ndebele (nr)"),
                            ("st", "Southern Sotho (st)"),
                            ("ss", "Swati (ss)"),
                            ("sg", "Sängö (sg)"),
                            ("tl", "Tagalog (tl)"),
                            ("ty", "Tahitian (ty)"),
                            ("vi", "Tiếng Việt (vi)"),
                            ("lu", "Tshiluba (lu)"),
                            ("ts", "Tsonga (ts)"),
                            ("tn", "Tswana (tn)"),
                            ("tr", "Türkçe (tr)"),
                            ("vo", "Volapük (vo)"),
                            ("wa", "Walloon (wa)"),
                            ("wo", "Wolof (wo)"),
                            ("za", "Zhuang (za)"),
                            ("az", "azərbaycan (az)"),
                            ("id", "bahasa Indonesia (id)"),
                            ("ms", "bahasa Malaysia (ms)"),
                            ("bm", "bamanakan (bm)"),
                            ("bs", "bosanski (bs)"),
                            ("br", "brezhoneg (br)"),
                            ("ca", "català (ca)"),
                            ("sn", "chiShona (sn)"),
                            ("da", "dansk (da)"),
                            ("se", "davvisámegiella (se)"),
                            ("et", "eesti (et)"),
                            ("eo", "esperanto (eo)"),
                            ("eu", "euskara (eu)"),
                            ("fo", "føroyskt (fo)"),
                            ("gl", "galego (gl)"),
                            ("hr", "hrvatski (hr)"),
                            ("ia", "interlingua (ia)"),
                            ("nd", "isiNdebele (nd)"),
                            ("xh", "isiXhosa (xh)"),
                            ("zu", "isiZulu (zu)"),
                            ("it", "italiano (it)"),
                            ("kl", "kalaallisut (kl)"),
                            ("kw", "kernewek (kw)"),
                            ("ku", "kurdî (ku)"),
                            ("lv", "latviešu (lv)"),
                            ("to", "lea fakatonga (to)"),
                            ("lt", "lietuvių (lt)"),
                            ("ln", "lingála (ln)"),
                            ("hu", "magyar (hu)"),
                            ("no", "norsk (no)"),
                            ("nb", "norsk bokmål (nb)"),
                            ("nn", "norsk nynorsk (nn)"),
                            ("uz", "o‘zbek (uz)"),
                            ("pl", "polski (pl)"),
                            ("pt", "português (pt)"),
                            ("ro", "română (ro)"),
                            ("rm", "rumantsch (rm)"),
                            ("sc", "sardu (sc)"),
                            ("sq", "shqip (sq)"),
                            ("sk", "slovenčina (sk)"),
                            ("sl", "slovenščina (sl)"),
                            ("sh", "srpskohrvatski (sh)"),
                            ("fi", "suomi (fi)"),
                            ("sv", "svenska (sv)"),
                            ("mi", "te reo Māori (mi)"),
                            ("ve", "tshiVenḓa (ve)"),
                            ("tk", "türkmen dili (tk)"),
                            ("yo", "Èdè Yorùbá (yo)"),
                            ("is", "íslenska (is)"),
                            ("cs", "čeština (cs)"),
                            ("el", "Ελληνικά (el)"),
                            ("be", "беларуская (be)"),
                            ("bg", "български (bg)"),
                            ("os", "ирон (os)"),
                            ("ky", "кыргызча (ky)"),
                            ("mk", "македонски (mk)"),
                            ("mn", "монгол (mn)"),
                            ("ce", "нохчийн (ce)"),
                            ("sr", "српски (sr)"),
                            ("tt", "татар (tt)"),
                            ("tg", "тоҷикӣ (tg)"),
                            ("uk", "українська (uk)"),
                            ("kk", "қазақ тілі (kk)"),
                            ("hy", "հայերեն (hy)"),
                            ("yi", "ייִדיש (yi)"),
                            ("he", "עברית (he)"),
                            ("ug", "ئۇيغۇرچە (ug)"),
                            ("ur", "اردو (ur)"),
                            ("ar", "العربية (ar)"),
                            ("sd", "سنڌي (sd)"),
                            ("fa", "فارسی (fa)"),
                            ("ps", "پښتو (ps)"),
                            ("ks", "کٲشُر (ks)"),
                            ("ne", "नेपाली (ne)"),
                            ("mr", "मराठी (mr)"),
                            ("sa", "संस्कृत भाषा (sa)"),
                            ("hi", "हिन्दी (hi)"),
                            ("as", "অসমীয়া (as)"),
                            ("bn", "বাংলা (bn)"),
                            ("pa", "ਪੰਜਾਬੀ (pa)"),
                            ("gu", "ગુજરાતી (gu)"),
                            ("or", "ଓଡ଼ିଆ (or)"),
                            ("ta", "தமிழ் (ta)"),
                            ("te", "తెలుగు (te)"),
                            ("kn", "ಕನ್ನಡ (kn)"),
                            ("ml", "മലയാളം (ml)"),
                            ("si", "සිංහල (si)"),
                            ("th", "ไทย (th)"),
                            ("lo", "ລາວ (lo)"),
                            ("bo", "བོད་སྐད་ (bo)"),
                            ("dz", "རྫོང་ཁ (dz)"),
                            ("my", "မြန်မာ (my)"),
                            ("ka", "ქართული (ka)"),
                            ("ti", "ትግርኛ (ti)"),
                            ("am", "አማርኛ (am)"),
                            ("km", "ខ្មែរ (km)"),
                            ("zh", "中文 (zh)"),
                            ("ii", "ꆈꌠꉙ (ii)"),
                            ("ko", "한국어 (ko)"),
                        ],
                        default=None,
                        max_length=8,
                        null=True,
                    ),
                ),
                ("release_date", models.TextField(blank=True, null=True)),
                ("wikipedia", models.URLField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("format", models.CharField(blank=True, max_length=255, null=True)),
                ("length", models.CharField(blank=True, max_length=255, null=True)),
                ("internet_archive_url", models.URLField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    auto_prefetch.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="audiobooks_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "publisher",
                    auto_prefetch.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="audiobooks",
                        to="entity.company",
                    ),
                ),
                (
                    "updated_by",
                    auto_prefetch.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="audiobooks_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="AudiobookInstance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(blank=True, default=1, null=True),
                ),
                (
                    "audiobook",
                    auto_prefetch.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="listen.audiobook",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
                "abstract": False,
                "base_manager_name": "prefetch_manager",
            },
            managers=[
                ("objects", django.db.models.manager.Manager()),
                ("prefetch_manager", django.db.models.manager.Manager()),
            ],
        ),
    ]
